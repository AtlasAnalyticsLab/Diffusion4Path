model:
  base_learning_rate: 2.5e-5
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    linear_start: 0.0015
    linear_end: 0.0195
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: image
    cond_stage_key: class_label
    image_size: 128
    channels: 3
    cond_stage_trainable: true
    monitor: val/loss
    use_ema: False
    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 64
        in_channels: 3
        out_channels: 3
        model_channels: 192
        attention_resolutions: [8, 4, 2]
        num_res_blocks: 2
        channel_mult: [ 1,2,3,4 ]
        num_heads: 1
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 512
        ckpt_path: "/local-path/unet.ckpt"

    first_stage_config:
      target: ldm.models.autoencoder.VQModelInterface
      params:
        ckpt_path: "/local-path/last.ckpt"
        embed_dim: 3
        n_embed: 8192
        ddconfig:
          double_z: false
          z_channels: 3
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.modules.encoders.modules.ClassEmbedder
      params:
        n_classes: 6 # 5 classes + 1 unconditinal
        embed_dim: 512
        key: class_label

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 32
    wrap: false
    train:
      target: ldm.data.kgh.KGHDataset
      params:
        config:
          split: test
    validation:
      target: ldm.data.kgh.KGHDataset
      params:
        config:
          split: test

lightning:
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 1000
    model_checkpoint:
      target: pytorch_lightning.callbacks.ModelCheckpoint
      params:
        save_weights_only: True

  trainer:
    benchmark: True